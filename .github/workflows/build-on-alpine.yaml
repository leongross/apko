name: Build and run on alpine (native)
env:
  REGISTRY: ghcr.io

on:
  workflow_dispatch:
  push:

jobs:
  build-and-upload:
    runs-on: ubuntu-22.04
    steps:
      - uses: jirutka/setup-alpine@v1
        with:
          branch: v3.15
          packages: >
            alpine-sdk
            make
            git
            bash
            wget

      - name: Install pinned go version
        id: get-go
        run: |
           apk update
           apk add go=1.19.4-r0 --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community
        shell: alpine.sh --root {0}

      # - name: Setup go
      #   id: setup-go
      #   run: |
      #     wget https://go.dev/dl/go1.19.4.linux-amd64.tar.gz
      #     tar -C /usr/local -xzf go1.19.4.linux-amd64.tar.gz && echo "export PATH=$PATH:/usr/local/go/bin" >> ~/.bashrc
      #     # check if go is installed correctly
      #     go version
      #     if [ $? -ne 0 ]; then
      #       echo "go is not installed correctly"
      #     fi
      #     export PATH=$PATH:/usr/local/go/bin
      #   shell: alpine.sh --root {0}

      - name: Check out repository
        id: checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
        with:
          ref: ${{ github.head_ref }}

      - name: Get go dependencies
        id: get-go-deps
        run: |
          go mod download && go mod verify
        shell: alpine.sh {0}

      - name: Build apko
        id: build-apko
        run: |
          make apko install
        shell: alpine.sh {0}

      - name: Build apko example
        id: build-example
        run: |
          apko build examples/alpine-base.yaml alpine:local alpine.tar
        shell: alpine.sh {0}

      - name: Upload Artifact 'alpine.tar'
        id: upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: alpine
          path: alpine.tar
